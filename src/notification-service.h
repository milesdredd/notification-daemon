/*
 * This file is generated by gdbus-codegen, do not modify it.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from. Note that it links to GLib, so must comply with the
 * LGPL linking clauses.
 */

#ifndef __NOTIFICATION_SERVICE_H__
#define __NOTIFICATION_SERVICE_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.freedesktop.Notifications */

#define NOTIFICATION_SERVICE_TYPE_NOTIFICATIONS (notification_service_notifications_get_type ())
#define NOTIFICATION_SERVICE_NOTIFICATIONS(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), NOTIFICATION_SERVICE_TYPE_NOTIFICATIONS, NotificationServiceNotifications))
#define NOTIFICATION_SERVICE_IS_NOTIFICATIONS(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), NOTIFICATION_SERVICE_TYPE_NOTIFICATIONS))
#define NOTIFICATION_SERVICE_NOTIFICATIONS_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), NOTIFICATION_SERVICE_TYPE_NOTIFICATIONS, NotificationServiceNotificationsIface))

struct _NotificationServiceNotifications;
typedef struct _NotificationServiceNotifications NotificationServiceNotifications;
typedef struct _NotificationServiceNotificationsIface NotificationServiceNotificationsIface;

struct _NotificationServiceNotificationsIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_notify) (
    NotificationServiceNotifications *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_app_name,
    guint arg_replaces_id,
    const gchar *arg_app_icon,
    const gchar *arg_summary,
    const gchar *arg_body,
    const gchar *const *arg_actions,
    GVariant *arg_hints,
    gint arg_expire_timeout);

};

GType notification_service_notifications_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *notification_service_notifications_interface_info (void);
guint notification_service_notifications_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void notification_service_notifications_complete_notify (
    NotificationServiceNotifications *object,
    GDBusMethodInvocation *invocation,
    guint notification_id);



/* D-Bus method calls: */
void notification_service_notifications_call_notify (
    NotificationServiceNotifications *proxy,
    const gchar *arg_app_name,
    guint arg_replaces_id,
    const gchar *arg_app_icon,
    const gchar *arg_summary,
    const gchar *arg_body,
    const gchar *const *arg_actions,
    GVariant *arg_hints,
    gint arg_expire_timeout,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean notification_service_notifications_call_notify_finish (
    NotificationServiceNotifications *proxy,
    guint *out_notification_id,
    GAsyncResult *res,
    GError **error);

gboolean notification_service_notifications_call_notify_sync (
    NotificationServiceNotifications *proxy,
    const gchar *arg_app_name,
    guint arg_replaces_id,
    const gchar *arg_app_icon,
    const gchar *arg_summary,
    const gchar *arg_body,
    const gchar *const *arg_actions,
    GVariant *arg_hints,
    gint arg_expire_timeout,
    guint *out_notification_id,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define NOTIFICATION_SERVICE_TYPE_NOTIFICATIONS_PROXY (notification_service_notifications_proxy_get_type ())
#define NOTIFICATION_SERVICE_NOTIFICATIONS_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), NOTIFICATION_SERVICE_TYPE_NOTIFICATIONS_PROXY, NotificationServiceNotificationsProxy))
#define NOTIFICATION_SERVICE_NOTIFICATIONS_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), NOTIFICATION_SERVICE_TYPE_NOTIFICATIONS_PROXY, NotificationServiceNotificationsProxyClass))
#define NOTIFICATION_SERVICE_NOTIFICATIONS_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), NOTIFICATION_SERVICE_TYPE_NOTIFICATIONS_PROXY, NotificationServiceNotificationsProxyClass))
#define NOTIFICATION_SERVICE_IS_NOTIFICATIONS_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), NOTIFICATION_SERVICE_TYPE_NOTIFICATIONS_PROXY))
#define NOTIFICATION_SERVICE_IS_NOTIFICATIONS_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), NOTIFICATION_SERVICE_TYPE_NOTIFICATIONS_PROXY))

typedef struct _NotificationServiceNotificationsProxy NotificationServiceNotificationsProxy;
typedef struct _NotificationServiceNotificationsProxyClass NotificationServiceNotificationsProxyClass;
typedef struct _NotificationServiceNotificationsProxyPrivate NotificationServiceNotificationsProxyPrivate;

struct _NotificationServiceNotificationsProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  NotificationServiceNotificationsProxyPrivate *priv;
};

struct _NotificationServiceNotificationsProxyClass
{
  GDBusProxyClass parent_class;
};

GType notification_service_notifications_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (NotificationServiceNotificationsProxy, g_object_unref)
#endif

void notification_service_notifications_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
NotificationServiceNotifications *notification_service_notifications_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
NotificationServiceNotifications *notification_service_notifications_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void notification_service_notifications_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
NotificationServiceNotifications *notification_service_notifications_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
NotificationServiceNotifications *notification_service_notifications_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define NOTIFICATION_SERVICE_TYPE_NOTIFICATIONS_SKELETON (notification_service_notifications_skeleton_get_type ())
#define NOTIFICATION_SERVICE_NOTIFICATIONS_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), NOTIFICATION_SERVICE_TYPE_NOTIFICATIONS_SKELETON, NotificationServiceNotificationsSkeleton))
#define NOTIFICATION_SERVICE_NOTIFICATIONS_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), NOTIFICATION_SERVICE_TYPE_NOTIFICATIONS_SKELETON, NotificationServiceNotificationsSkeletonClass))
#define NOTIFICATION_SERVICE_NOTIFICATIONS_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), NOTIFICATION_SERVICE_TYPE_NOTIFICATIONS_SKELETON, NotificationServiceNotificationsSkeletonClass))
#define NOTIFICATION_SERVICE_IS_NOTIFICATIONS_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), NOTIFICATION_SERVICE_TYPE_NOTIFICATIONS_SKELETON))
#define NOTIFICATION_SERVICE_IS_NOTIFICATIONS_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), NOTIFICATION_SERVICE_TYPE_NOTIFICATIONS_SKELETON))

typedef struct _NotificationServiceNotificationsSkeleton NotificationServiceNotificationsSkeleton;
typedef struct _NotificationServiceNotificationsSkeletonClass NotificationServiceNotificationsSkeletonClass;
typedef struct _NotificationServiceNotificationsSkeletonPrivate NotificationServiceNotificationsSkeletonPrivate;

struct _NotificationServiceNotificationsSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  NotificationServiceNotificationsSkeletonPrivate *priv;
};

struct _NotificationServiceNotificationsSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType notification_service_notifications_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (NotificationServiceNotificationsSkeleton, g_object_unref)
#endif

NotificationServiceNotifications *notification_service_notifications_skeleton_new (void);


G_END_DECLS

#endif /* __NOTIFICATION_SERVICE_H__ */
